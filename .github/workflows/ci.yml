name: "rapiddweller-benerator-ce CI"

on:
  push:
    branches: [ ci-migration ]
  pull_request:
    branches: [ ci-migration ]


env:
  ARTIFACT_ID: "rapiddweller-benerator-ce"
  ARTIFACT_VERSION_BASE: "1.1.0"
  MAVEN_CLI_OPTS: "--batch-mode --update-snapshots"
  JAVA_JDKVERSION_TAG: "jdk-11"
  SET_VERSION: |
    if [ GITHUB_REF == refs/tags/* ];
    then
    ARTIFACT_VERSION=$ARTIFACT_VERSION_BASE-$JAVA_JDKVERSION_TAG-SNAPSHOT;
    echo ARTIFACT_VERSION=$ARTIFACT_VERSION  >> $GITHUB_ENV;
      echo ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION >> $GITHUB_ENV;
    else
      ARTIFACT_VERSION=$ARTIFACT_VERSION_BASE-$JAVA_JDKVERSION_TAG-SNAPSHOT;
      echo ARTIFACT_VERSION=$ARTIFACT_VERSION  >> $GITHUB_ENV;
      echo ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION >> $GITHUB_ENV;
    fi
jobs:

  ###################### Test / Build ######################

  build_jdk11:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: mvn versions:set -DnewVersion=$ARTIFACT_VERSION
      - run: mvn $MAVEN_CLI_OPTS clean package -Dmaven.test.skip=true
      - name: Upload build artifact for assembly
        uses: actions/upload-artifact@v2
        with:
          name: build_jdk11
          path: target/*.jar
          if-no-files-found: error
          retention-days: 5

  test_jdk11:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: mvn versions:set -DnewVersion=$ARTIFACT_VERSION
      - run: mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report
      - run: awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
      - run: ls
      - name: Upload test-report result for coverage_jdk11
        uses: actions/upload-artifact@v2
        with:
          name: test_jdk11
          path: target/site/jacoco
          if-no-files-found: error
          retention-days: 5

  ###################### Quality ######################

  coverage_jdk11:
    runs-on: ubuntu-latest
    container: haynes/jacoco2cobertura:1.0.4
    needs: [ "test_jdk11" ]
    steps:
      - name: Download test-report result from test_jdk11
        uses: actions/download-artifact@v2
        with:
          name: test_jdk11
          path: target
      - name: check content of target
        run: cd target && ls && cd ..
      - run: 'python /opt/cover2cover.py target/jacoco.xml src/main/java > cobertura.xml'
      - run: 'python /opt/source2filename.py cobertura.xml'
      - name: Upload cobertura report
        uses: actions/upload-artifact@v2
        with:
          name: coverage_jdk11
          path: cobertura.xml
          if-no-files-found: error
          retention-days: 5

  ############################# Documentation ##############################

  documentation_build:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - uses: actions/checkout@v2
      - run: pip install mkdocs-material
      - run: pip install markdown-include
      - run: pip install mkdocs-markdownextradata-plugin
      - run: pip install mkdocs-with-pdf
      - run: mkdocs build --clean
      - name: Upload documentation build for Assembly
        uses: actions/upload-artifact@v2
        with:
          name: documentation_build_assembly
          path: site/*.pdf
          if-no-files-found: error
          retention-days: 5
      - name: Upload documentation build for hosting
        uses: actions/upload-artifact@v2
        with:
          name: documentation_build_hosting
          path: site
          if-no-files-found: error
          retention-days: 5

  ###################### Assembly and Deploy ######################

  assembly_jdk11:
    runs-on: ubuntu-latest
    needs: [ test_jdk11,build_jdk11,documentation_build ]
    container: maven:3.6-adoptopenjdk-11
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Download documentation_build_assembly for assembly
        uses: actions/download-artifact@v2
        with:
          name: documentation_build_assembly
          path: target/manual
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: build_jdk11
          path: target
      - name: check content of target
        run: cd target && ls
      - run: mvn $MAVEN_CLI_OPTS site:site assembly:single -Dmaven.test.skip=true
      - name: Upload dist
        if: github.ref == refs/tags/*
        uses: actions/upload-artifact@v2
        with:
          name: assembly_jdk11
          path: |
            target/*.tar.gz
            target/*.zip
            target/site/
            target/manual/
          if-no-files-found: error
          retention-days: 5
      - name: Upload dist test
        uses: actions/upload-artifact@v2
        with:
          name: assembly_jdk11_test
          path: |
            target/*.tar.gz
          if-no-files-found: error
          retention-days: 1

  publish_jdk11:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    needs: [ test_jdk11,build_jdk11 ]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ###################### E2ET ######################

  E2ET_helper-scripts_jdk11:
    runs-on: ubuntu-latest
    needs: [ test_jdk11 ]
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: bash script/1_install_mvn_dependencies.sh
      - run: bash script/2_setup_benerator.sh
      - run: bash script/3_execute_demos.sh

  E2ET_script-graalvm11:
    runs-on: ubuntu-latest
    container: findepi/graalvm:java11-all
    needs: [ assembly_jdk11 ]
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: assembly_jdk11_test
          path: target
      - run: tar -xzf target/"$ARTIFACT_FULLNAME"-dist.tar.gz
      - name: setup benerator env
        run: |
          echo SHELL=/bin/bash >> $GITHUB_ENV
          echo BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME >> $GITHUB_ENV
          echo $BENERATOR_HOME
          echo PATH=$PWD/$ARTIFACT_FULLNAME/bin:$PATH >> $GITHUB_ENV
      - name: set permission
        run: chmod -R 777 $BENERATOR_HOME/bin/
      - name: check if benerator is setup correctly
        run: benerator --version
      - run: benerator $BENERATOR_HOME/demo/script/scriptcode.ben.xml
      - run: benerator $BENERATOR_HOME/demo/script/scriptfile.ben.xml

  E2ET_db-graalvm11:
    runs-on: ubuntu-latest
    container: findepi/graalvm:java11-all
    needs: [ assembly_jdk11 ]
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: assembly_jdk11_test
          path: target
      - run: tar -xzf target/"$ARTIFACT_FULLNAME-dist.tar.gz"
      - name: setup benerator env
        run: |
          echo SHELL=/bin/bash >> $GITHUB_ENV
          echo BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME >> $GITHUB_ENV
          echo $BENERATOR_HOME
          echo PATH=$PWD/$ARTIFACT_FULLNAME/bin:$PATH >> $GITHUB_ENV
      - name: set permission
        run: chmod -R 777 $BENERATOR_HOME/bin/
      - name: check if benerator is setup correctly
        run: benerator --version
      - run: benerator $BENERATOR_HOME/demo/db/user.ben.xml
      - run: benerator $BENERATOR_HOME/demo/db/compositekey.ben.xml

  E2ET_files-graalvm11:
    runs-on: ubuntu-latest
    container: findepi/graalvm:java11-all
    needs: [ assembly_jdk11 ]
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: assembly_jdk11_test
          path: target
      - run: tar -xzf target/"$ARTIFACT_FULLNAME"-dist.tar.gz
      - name: setup benerator env
        run: |
          echo SHELL=/bin/bash >> $GITHUB_ENV
          echo BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME >> $GITHUB_ENV
          echo $BENERATOR_HOME
          echo PATH=$PWD/$ARTIFACT_FULLNAME/bin:$PATH >> $GITHUB_ENV
      - name: set permission
        run: chmod -R 777 $BENERATOR_HOME/bin/
      - name: check if benerator is setup correctly
        run: benerator --version
      - run: benerator $BENERATOR_HOME/demo/file/create_csv.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/create_dates.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/create_fixed_width.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/create_xls.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/create_xml.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/create_xml_by_script.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/csv_io.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/greetings_csv.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/import_fixed_width.ben.xml
      - run: benerator $BENERATOR_HOME/demo/file/postprocess-import.ben.xml

  E2ET_hsqlmem-graalvm11:
    runs-on: ubuntu-latest
    container: findepi/graalvm:java11-all
    needs: [ assembly_jdk11 ]
    steps:
      - run: eval $SET_VERSION
      - uses: actions/checkout@v2
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: assembly_jdk11_test
          path: target
      - run: tar -xzf target/"$ARTIFACT_FULLNAME-dist.tar.gz"
      - name: setup benerator env
        run: |
          echo SHELL=/bin/bash >> $GITHUB_ENV
          echo BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME >> $GITHUB_ENV
          echo $BENERATOR_HOME
          echo PATH=$PWD/$ARTIFACT_FULLNAME/bin:$PATH >> $GITHUB_ENV
      - name: set permission
        run: chmod -R 777 $BENERATOR_HOME/bin/
      - name: check if benerator is setup correctly
        run: benerator --version
      - run: benerator $BENERATOR_HOME/demo/file/shop-hsqlmem.ben.xml