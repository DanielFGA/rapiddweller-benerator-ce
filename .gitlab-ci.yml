stages:
  - setup
  - build
  - quality
  - distribution
  - E2ET
  - upload
  - release

# common vars for multiple stages/jobs
variables:
  ARTIFACT_ID: "rapiddweller-benerator-ce"
  ARTIFACT_VERSION_BASE: "1.1.0" # should be updated with the final release (tag release version)
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository/"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/releases/${CI_COMMIT_TAG}"


cache:
  paths:
    - .m2/repository/

###################### Setup ######################

setup:jdk-11:
  stage: setup
  image:
    name: alpine/git:latest
    entrypoint: [ "" ]
  script:
    - export RD_PROJECT_LATEST_TAG=$(git describe --abbrev=0 --tags)
    - echo "RD_PROJECT_LATEST_TAG=$RD_PROJECT_LATEST_TAG" >> build.env
    - export JAVA_JDKVERSION_TAG="jdk-11"
    - echo "JAVA_JDKVERSION_TAG=$JAVA_JDKVERSION_TAG" >> build.env
    - |
      if [ -z "$CI_COMMIT_TAG" ];
      then
        export ARTIFACT_VERSION=$ARTIFACT_VERSION_BASE+$JAVA_JDKVERSION_TAG-SNAPSHOT
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      else
        export ARTIFACT_VERSION=$CI_COMMIT_TAG+$JAVA_JDKVERSION_TAG
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      fi
    - export ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION
    - echo "ARTIFACT_FULLNAME=$ARTIFACT_FULLNAME" >> build.env
    - export
  artifacts:
    reports:
      dotenv: build.env


###################### Test / Build ######################

.prepare-mvn-project: &prepare-mvn-project
  image: maven:3.6-adoptopenjdk-11
  before_script:
    - mvn versions:set -DnewVersion=$ARTIFACT_VERSION

build:jdk-11:
  stage: build
  <<: *prepare-mvn-project
  needs:
    - job: setup:jdk-11
      artifacts: true
  artifacts:
    paths:
      - target/*.jar
      - target/surefire-reports
  script:
    - mvn $MAVEN_CLI_OPTS clean package

test:jdk-11:
  stage: build
  <<: *prepare-mvn-project
  needs:
    - job: setup:jdk-11
      artifacts: true
  script:
    - mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
  artifacts:
    paths:
      - target/site/jacoco/jacoco.xml

###################### Quality ######################

coverage:jdk-11:
  # Must be in a stage later than test:jdk11:'s stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or chose an existing stage like `deploy`.
  stage: quality
  image: haynes/jacoco2cobertura:1.0.4
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py target/site/jacoco/jacoco.xml src/main/java > target/site/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py target/site/cobertura.xml'
  needs:
    - job: test:jdk-11
      artifacts: true
  artifacts:
    reports:
      cobertura: target/site/cobertura.xml

###################### Assembly and Deploy ######################

assembly:jdk-11:
  needs:
    - job: setup:jdk-11
      artifacts: true
    - job: build:jdk-11
      artifacts: true
  <<: *prepare-mvn-project
  stage: distribution
  artifacts:
    paths:
      - target/*.tar.gz
      - target/*.zip
      - target/site/
  script:
    - mvn $MAVEN_CLI_OPTS site:site assembly:single -Dmaven.test.skip=true

deploy:jdk-11:
  needs:
    - job: setup:jdk-11
      artifacts: true
    - job: build:jdk-11
      artifacts: true
  <<: *prepare-mvn-project
  stage: distribution
  script:
    - mvn $MAVEN_CLI_OPTS clean install deploy -Dmaven.test.skip=true

###################### E2ET ######################

.e2et-preparation-common: &e2et-preparation-common
  stage: E2ET
  needs:
    - job: setup:jdk-11
      artifacts: true
    - job: assembly:jdk-11
      artifacts: true

.e2et-preparation-graalvm11: &e2et-preparation-graalvm11
  <<: *e2et-preparation-common
  image: oracle/graalvm-ce:20.3.0-java11
  before_script:
    - gu install python
    - gu install ruby
    - tar -xzf target/$ARTIFACT_FULLNAME-dist.tar.gz
    - export SHELL=/bin/bash
    - export BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME
    - export PATH=$PATH:$PWD/$ARTIFACT_FULLNAME/bin
    - chmod -R 777 $PWD/$ARTIFACT_FULLNAME/bin/
    - benerator --version

.e2et-preparation-openjdk11: &e2et-preparation-openjdk11
  <<: *e2et-preparation-common
  image: maven:3.6-adoptopenjdk-11
  before_script:
    - tar -xzf target/$ARTIFACT_FULLNAME-dist.tar.gz
    - export SHELL=/bin/bash
    - export BENERATOR_HOME=$PWD/$ARTIFACT_FULLNAME
    - export PATH=$PATH:$PWD/$ARTIFACT_FULLNAME/bin
    - chmod -R 777 $PWD/$ARTIFACT_FULLNAME/bin/
    - benerator --version

E2ET:helper-scripts:jdk-11:
  <<: *e2et-preparation-common
  image: maven:3.6-adoptopenjdk-11
  script:
    - bash script/1_install_mvn_dependencies.sh
    - bash script/2_setup_benerator.sh
    - bash script/3_execute_demos.sh

E2ET:script-graalvm11:
  <<: *e2et-preparation-graalvm11
  script:
    - cd $ARTIFACT_FULLNAME/demo/script
    - benerator scriptcode.ben.xml
    - benerator scriptfile.ben.xml

E2ET:script-openjdk11:
  <<: *e2et-preparation-openjdk11
  script:
    - cd $ARTIFACT_FULLNAME/demo/script
    - benerator scriptcode.ben.xml
    - benerator scriptfile.ben.xml

E2ET:db-graalvm11:
  <<: *e2et-preparation-graalvm11
  script:
    - cd $ARTIFACT_FULLNAME/demo/db
    - benerator user.ben.xml
    - benerator compositekey.ben.xml

E2ET:files-graalvm11:
  <<: *e2et-preparation-graalvm11
  script:
    - cd $ARTIFACT_FULLNAME/demo/file
    - benerator create_csv.ben.xml
    - benerator create_dates.ben.xml
    - benerator create_fixed_width.ben.xml
    - benerator create_xls.ben.xml
    - benerator create_xml.ben.xml
    - benerator create_xml_by_script.ben.xml
    - benerator csv_io.ben.xml
    - benerator greetings_csv.ben.xml
    - benerator import_fixed_width.ben.xml
    - benerator postprocess-import.ben.xml

E2ET:shop:hsqlmem-graalvm11:
  <<: *e2et-preparation-graalvm11
  script:
    - cd $ARTIFACT_FULLNAME/demo/shop
    - benerator shop-hsqlmem.ben.xml


E2ET:shop:mysql-graalvm11:
  variables:
    DB_HOST: "mysql"
    DB_PORT: "3306"
    DB_CONNECTION: "mysql"
    # mysql
    MYSQL_ROOT_USER: "root"
    MYSQL_ROOT_PASSWORD: "bentest!"
    MYSQL_DATABASE: "e2etmysql"
  services:
    - name: mysql:8.0.22
      alias: mysql
  <<: *e2et-preparation-graalvm11
  script:
    - sleep 60s
    - |
      echo "
      dbUrl=jdbc:mysql://$DB_HOST:$DB_PORT/$MYSQL_DATABASE
      dbDriver=com.mysql.cj.jdbc.Driver
      dbCatalog=$MYSQL_DATABASE
      dbUser=$MYSQL_ROOT_USER
      dbPassword=$MYSQL_ROOT_PASSWORD
      idStrategy=increment
      idParam=1010" > $ARTIFACT_FULLNAME/demo/shop/mysql/shop.mysql.properties
    - echo 'shop.mysql.properties:'
    - cat $ARTIFACT_FULLNAME/demo/shop/mysql/shop.mysql.properties
    - cd $ARTIFACT_FULLNAME/demo/shop
    - benerator shop-mysql.ben.xml

E2ET:shop:postgres-graalvm11:
  variables:
    DB_HOST: postgres
    DB_PORT: "5432"
    DB_CONNECTION: "postgres"
    # postgres
    POSTGRES_DB: "e2etpostgres"
    POSTGRES_USER: "root"
    POSTGRES_PASSWORD: "bentest!"
    POSTGRES_HOST_AUTH_METHOD: trust
  services:
    - name: postgres:12.2-alpine
      alias: postgres
  <<: *e2et-preparation-graalvm11
  script:
    - sleep 30s
    - |
      echo "
      dbUrl=jdbc:postgresql://$DB_HOST:$DB_PORT/$POSTGRES_DB
      dbDriver=org.postgresql.Driver
      dbUser=$POSTGRES_USER
      dbPassword=$POSTGRES_PASSWORD
      dbCatalog=$POSTGRES_DB
      dbSchema=public
      idStrategy=increment
      idParam=1010" > $ARTIFACT_FULLNAME/demo/shop/postgres/shop.postgres.properties
    - echo 'shop.postgresql.properties:'
    - cat $ARTIFACT_FULLNAME/demo/shop/postgres/shop.postgres.properties
    - cd $ARTIFACT_FULLNAME/demo/shop
    - benerator shop-postgres.ben.xml

###################### Upload Binaries ######################

upload:jdk-11:
  stage: upload
  image: curlimages/curl:latest
  needs:
    - job: setup:jdk-11
      artifacts: true
    - job: assembly:jdk-11
      artifacts: true
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - export UPLOAD_DIST_ZIP_JDK11_NAME=$ARTIFACT_FULLNAME-dist.zip
    - echo "UPLOAD_DIST_ZIP_JDK11_NAME=$UPLOAD_DIST_ZIP_JDK11_NAME" >> build.env
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file target/$UPLOAD_DIST_ZIP_JDK11_NAME ${PACKAGE_REGISTRY_URL}/$UPLOAD_DIST_ZIP_JDK11_NAME
    - export UPLOAD_DIST_TARGZ_JDK11_NAME=$ARTIFACT_FULLNAME-dist.tar.gz
    - echo "UPLOAD_DIST_TARGZ_JDK11_NAME=$UPLOAD_DIST_TARGZ_JDK11_NAME" >> build.env
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file target/$UPLOAD_DIST_TARGZ_JDK11_NAME ${PACKAGE_REGISTRY_URL}/$UPLOAD_DIST_TARGZ_JDK11_NAME

###################### Release ######################

release:dist:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: upload:jdk-11
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${UPLOAD_DIST_ZIP_JDK11_NAME}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${UPLOAD_DIST_ZIP_JDK11_NAME}\"}" \
        --assets-link "{\"name\":\"${UPLOAD_DIST_TARGZ_JDK11_NAME}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${UPLOAD_DIST_TARGZ_JDK11_NAME}\"}"
